<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.domor.dao.basic.UserDao">

	<insert id="insert" parameterType="map">
		INSERT INTO user(username, password, realname,area,areaName,dept,deptName, role, roleName, sex, phone, creator, createTime) 
		VALUES(#{username}, #{password}, #{realname}, #{area},#{areaName}, #{dept},#{deptName},#{role}, #{roleName}, #{sex}, #{phone}, #{creator}, now())
	</insert>
	
	
	<insert id="insertPonds" parameterType="map">
	    insert into rl_user_pond(username,pondCode)values(#{username}, #{pondCode}); 
	</insert>
	
	<delete id="deletePonds" parameterType="String">
		delete from rl_user_pond where username=#{username} 
	</delete>
	
	<update id="update" parameterType="map">
		UPDATE user 
		SET 
			realname = #{realname},
			role = #{role},
			roleName = #{roleName},
			sex = #{sex},
			phone=#{phone}, 
			delete_flag = #{delete_flag},
			editor = #{editor}, 
			area = #{area},
			areaName = #{areaName},
			dept = #{dept},
			deptName = #{deptName},
			editTime = now()
		WHERE  username = #{username}
	</update>
	
	

	
	<delete id="delete" parameterType="String">
		UPDATE user SET delete_flag = 1 WHERE  username = #{username}
	</delete>
	
	<update id="initUserPwd" parameterType="java.util.Map">
		UPDATE user SET password = #{password} WHERE  username = #{username}
	</update>

	<select id="getByName" resultType="map" parameterType="String">		 
	  select * from `user` u left JOIN(			
		SELECT DISTINCT 
		    username, GROUP_CONCAT(DISTINCT `code` ORDER BY `code`) AS `pondCode`, GROUP_CONCAT(DISTINCT `name` ORDER BY `code`) AS `pondName`
		   FROM (select b.username,c.code,c.name from rl_user_pond b 
		join pond c on b.pondCode = c.code
		WHERE b.username = #{username})aa 
		  group by username 
		  ORDER BY username
		)d on u.username = d.username where d.username=#{username}
	</select>
	
	<select id="count" parameterType="map" resultType="int">
		SELECT COUNT(1) FROM user
		<where>
		<if test="username != null and username != null">
	    	username = #{username}
	    </if>
		</where>
	</select>
	<select id="query" parameterType="map" resultType="map">
		SELECT * FROM user
		<where>
		<if test="username != null and username != null">
	    	username = #{username}
	    </if>
		</where>
		<if test="sort != null and order != null">
	    	ORDER BY ${sort} ${order}
	    </if>
	    <if test="skipCount != null and rows != null">
			LIMIT #{start}, #{rows} 
		</if>
	</select>
</mapper>
