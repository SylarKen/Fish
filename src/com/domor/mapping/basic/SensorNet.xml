<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.domor.dao.basic.SensorNetDao">

	<!-- 采集器传感器关联表 -->
   <insert id="addCollectorDevice" parameterType="map">
		INSERT INTO `fish`.`collector_device` ( `collectorId`, `deviceIdOxygen`, `deviceIdRelay`, `high_value`, `low_value`, `collect_cycle`, `insertTime`) 
        VALUES ( #{collectorId}, #{deviceIdOxygen}, #{deviceIdRelay}, #{high_value}, #{low_value}, #{collect_cycle}, NOW())
	</insert>
	<!-- deviceId 中的fatherID -->
   <insert id="addDeviceFatherID" parameterType="map">
    	update device  set fatherId =  #{deviceIdOxygen}   WHERE  deviceId = #{deviceIdRelay}
	</insert>
	
	<delete id="deleteCollectorDevice" parameterType="map">
	      delete  from collector_device where collectorId = #{collectorId}
	      and deviceIdOxygen = #{deviceIdOxygen}
	      and deviceIdRelay = #{deviceIdRelay}
	</delete>
	
	<insert id="deleteDeviceFatherID" parameterType="map">
    	update device  set fatherId = ''   WHERE  deviceId = #{deviceIdRelay}
	</insert>
	
	<!-- 新增池塘 用户关联表 -->
	 <insert id="insertUserPond" parameterType="map">
		INSERT INTO `rl_user_pond` (`username`,`pondCode`)
		VALUES (#{username}, #{pondCode} )
	</insert>
	
	<!-- 分页查询时的count -->
	<select id="count" parameterType="map" resultType="int">
	    SELECT count(1) from (
	    	SELECT e.* ,f.deviceName as deviceIdOxygenName , g.deviceName as deviceIdRelayName  from collector_device e 
			LEFT JOIN device f on e.deviceIdOxygen = f.deviceId
			LEFT JOIN device g on e.deviceIdRelay = g.deviceId 
			WHERE e.collectorId in  (SELECT collectorId from collector c 
			LEFT JOIN (select DISTINCT deptCode from pond a LEFT JOIN(SELECT pondCode from rl_user_pond  where
			 username = #{username}
			 ) b on a.code = b.pondCode)d
			on c.pointCode = d.deptCode where 1 = 1
			   <if test="deptCode != null and deptCode != ''">
			      and	d.deptCode like concat('%',#{deptCode}, '%')
	          </if>
	           <if test="collectorId != null and collectorId != ''">
			     and	c.collectorId  =#{collectorId} 
	          </if>
	          
			) 
			 <if test="deviceIdOxygen != null and deviceIdOxygen != ''">
			    and	e.deviceIdOxygen like concat('%',#{deviceIdOxygen}, '%')
	         </if>
		) u
	</select>
	
	<!-- 分页查询时的query -->
	<select id="query" parameterType="map" resultType="map">
			SELECT e.* ,f.deviceName as deviceIdOxygenName , g.deviceName as deviceIdRelayName  from collector_device e 
			LEFT JOIN device f on e.deviceIdOxygen = f.deviceId
			LEFT JOIN device g on e.deviceIdRelay = g.deviceId 
			WHERE e.collectorId in  (SELECT collectorId from collector c 
			LEFT JOIN (select DISTINCT deptCode from pond a LEFT JOIN(SELECT pondCode from rl_user_pond  where
			 username = #{username}
			 ) b on a.code = b.pondCode)d
			on c.pointCode = d.deptCode where 1 = 1
			   <if test="deptCode != null and deptCode != ''">
			      and	d.deptCode like concat('%',#{deptCode}, '%')
	          </if>
	           <if test="collectorId != null and collectorId != ''">
			     and	c.collectorId  =#{collectorId} 
	          </if>
	          
			) 
			 <if test="deviceIdOxygen != null and deviceIdOxygen != ''">
			    and	e.deviceIdOxygen like concat('%',#{deviceIdOxygen}, '%')
	         </if>
			 <if test="sort != null and order != null">
	    	    order by  ${sort} ${order}
	         </if>
		     <if test="start != null and rows != null">
			    limit #{start},#{rows} 
		     </if>
	</select>
	

  	<!-- 养殖点的树 -->
	 <select id="getChildDeptsForTree"  parameterType="map" resultType="map" >
		SELECT DISTINCT f.* from (
			 	 select d.* from 
				(
				 	select c.* from (SELECT a.code from dept a  join `user` b on a.code = b.dept  and b.username=#{loginUser}) aa
					join dept c on c.pcode = aa.code   where delete_flag = 0 
				 )dd join dept d on dd.code = d.pcode or dd.code = d.code
				 <where>
				   	  <if test="code != null and code != ''">
				    	and d.code = #{code}
				      </if>
					  <if test="name != null and name != ''">
				    	d.name like concat('%',#{name}, '%')
				      </if>
			     </where>
		)e join dept f on e.code = f.pcode or e.code = f.code or e.pcode = f.code 
    	 where  
    	  <![CDATA[
    	 	 f.code <> (SELECT a.code from dept a  join `user` b on a.code = b.dept  and b.username=#{loginUser})
    	   ]]>

	 	order by f.grade,f.code
	</select>
	<select id="getChildCollectorForTree"  parameterType="map" resultType="map">
		select areaName , delete_flag , collectorName as name ,pointCode as pcode ,collectorId as code ,areaCode as areaId ,is_online from collector where delete_flag =0
	</select>
	
	<select id="countOxygen" parameterType="map" resultType="int">
		SELECT COUNT(1) FROM device WHERE 0 = 0  and delete_flag = 0
			<if test="deviceCode != null and deviceCode != ''">
		    	 AND deviceCode like concat('%', #{deviceCode}, '%')
		    </if>
			<if test="collectorId != null and collectorId != ''">
		    	 AND collectorId like concat('%', #{collectorId}, '%')
		    </if>
	     	<if test="typeCode != null and typeCode != ''">
		    	 AND typeCode like concat('%', #{typeCode}, '%')
		    </if>
	</select>
	<select id="queryOxygen" parameterType="map" resultType="map">
		SELECT * FROM device WHERE 0 = 0 and delete_flag = 0
		<if test="deviceCode != null and deviceCode != ''">
	    	 AND deviceCode like concat('%', #{deviceCode}, '%')
	    </if>
		<if test="collectorId != null and collectorId != ''">
	    	 AND collectorId like concat('%', #{collectorId}, '%')
	    </if>
     	<if test="typeCode != null and typeCode != ''">
	    	 AND typeCode like concat('%', #{typeCode}, '%')
	    </if>
		<if test="sort != null and order != ''">
	    	ORDER BY ${sort} ${order}
	    </if>
	    <if test="start != null and rows != ''">
			LIMIT #{start}, #{rows} 
		</if>
	</select>
	
	
	<select id="readHeartBeatCycle" parameterType="map" resultType="map">
		select heartbeat_cycle from collector  where collectorId = #{collectorId}
	</select>
	
	<update id="updateHeartBeatCycle" parameterType="map" >
		update collector SET  heartbeat_cycle = #{heartbeat_cycle}  where collectorId = #{collectorId}
	</update>
	
	
</mapper>
