<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.domor.dao.production.CatchDao">

	<select id="getCount" parameterType="map" resultType="integer">
		select count(1) from sc_catch
		<where>
			<if test="pondCodeArr != null ">
				AND pondCode in 
				<foreach collection="pondCodeArr" item="pondCode" index="index" open="(" close=")" separator=",">
					#{pondCode} 
				</foreach>
			</if>
			<if test="breedName != null and breedName != ''">
		    	and breedName like concat('%', #{breedName}, '%')
		    </if>
		    <if test="delete_flag != null ">
		    	and delete_flag = #{delete_flag}
		    </if>
		</where>
	</select>

	<select id="getData" parameterType="map" resultType="map">
		select * from sc_catch 
		<where>
			<if test="pondCodeArr != null ">
				AND pondCode in 
				<foreach collection="pondCodeArr" item="pondCode" index="index" open="(" close=")" separator=",">
					#{pondCode} 
				</foreach>
			</if>
			<if test="breedName != null and breedName != ''">
		    	and breedName like concat('%', #{breedName}, '%')
		    </if>
		    <if test="delete_flag != null ">
		    	and delete_flag = #{delete_flag}
		    </if>
		</where>
		 order by id desc 
		<if test="start != null and rows != null">
			limit #{start},#{rows} 
		</if>
	</select>
	
	<select id="getById" parameterType="int" resultType="map">
		select * from sc_catch where id = #{id}
	</select>
	
	<insert id="add" parameterType="map">
		INSERT INTO sc_catch (pondCode, pondName, breedCode, breedName, catchTime, 
			catchWay, weight, amount, delete_flag, memo, createTime, creator) 
		VALUES (#{pondCode}, #{pondName}, #{breedCode}, #{breedName}, #{catchTime}, 
			#{catchWay}, #{weight}, #{amount}, 0, #{memo}, now(), #{creator} )
	</insert>
	
	<update id="edit" parameterType="map">
		UPDATE sc_catch
		SET 
		 pondCode = #{pondCode},
		 pondName = #{pondName},
		 breedCode = #{breedCode},
		 breedName = #{breedName},
		 catchTime = #{catchTime},
		 catchWay = #{catchWay},
		 weight = #{weight},
		 amount = #{amount},
		 delete_flag = #{delete_flag},
		 memo = #{memo},
		 editTime = now(),
		 editor = #{editor}
		WHERE id = #{id}
	</update>
</mapper>
